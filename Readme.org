$ git diff HEAD
diff --git a/src/main/java/max/utility/tomato/PropertyLoader.java b/src/main/java/max/utility/tomato/PropertyLoader.java
old mode 100644
new mode 100755
diff --git a/src/test/java/max/utility/PropertyLoader.java b/src/test/java/max/utility/PropertyLoader.java
old mode 100644
new mode 100755
diff --git a/src/test/java/max/utility/tomato/PropertyLoaderTest.java b/src/test/java/max/utility/tomato/PropertyLoaderTest.java
old mode 100644
new mode 100755
diff --git a/src/test/resources/timer-manager.properties b/src/test/resources/timer-manager.properties
old mode 100644
new mode 100755


nessuna modifica, eppure:
$ git status
# On branch develop_gui
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#       modified:   src/main/java/max/utility/tomato/PropertyLoader.java
#       modified:   src/test/java/max/utility/PropertyLoader.java
#       modified:   src/test/java/max/utility/tomato/PropertyLoaderTest.java
#       modified:   src/test/resources/timer-manager.properties
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#       logs/
no changes added to commit (use "git add" and/or "git commit -a")



SOLUZIONE:

http://stackoverflow.com/questions/1257592/removing-files-saying-old-mode-100755-new-mode-100644-from-unstaged-changes-in
 down vote accepted

That looks like unix file permissions modes to me (755=rwxrw_rw_, 644=rw_r__r__) - the old mode included the +x (executable) flag, the new mode doesn't.
This msysgit issue's replies suggests setting core.filemode to false in order to get rid of the issue:

git config core.filemode false

